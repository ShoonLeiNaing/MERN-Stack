[{"/media/shoonlei/PD400/MERN-Testing/user-app/src/index.js":"1","/media/shoonlei/PD400/MERN-Testing/user-app/src/App.js":"2","/media/shoonlei/PD400/MERN-Testing/user-app/src/reportWebVitals.js":"3","/media/shoonlei/PD400/MERN-Testing/user-app/src/store/index.js":"4","/media/shoonlei/PD400/MERN-Testing/user-app/src/reducers/index.js":"5","/media/shoonlei/PD400/MERN-Testing/user-app/src/reducers/category.reducer.js":"6","/media/shoonlei/PD400/MERN-Testing/user-app/src/actions/constants.js":"7","/media/shoonlei/PD400/MERN-Testing/user-app/src/containers/HomePage.js":"8","/media/shoonlei/PD400/MERN-Testing/user-app/src/components/Header.js":"9","/media/shoonlei/PD400/MERN-Testing/user-app/src/components/MenuHeader.js":"10","/media/shoonlei/PD400/MERN-Testing/user-app/src/actions/category.actions.js":"11","/media/shoonlei/PD400/MERN-Testing/user-app/src/helpers/axios.js":"12"},{"size":633,"mtime":1614253976000,"results":"13","hashOfConfig":"14"},{"size":180,"mtime":1614254724000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1614252892000,"results":"16","hashOfConfig":"14"},{"size":207,"mtime":1614253832000,"results":"17","hashOfConfig":"14"},{"size":213,"mtime":1614253834000,"results":"18","hashOfConfig":"14"},{"size":2387,"mtime":1614254048000,"results":"19","hashOfConfig":"14"},{"size":1414,"mtime":1614253254000,"results":"20","hashOfConfig":"14"},{"size":256,"mtime":1614255906000,"results":"21","hashOfConfig":"14"},{"size":171,"mtime":1614255582000,"results":"22","hashOfConfig":"14"},{"size":1159,"mtime":1611580221000,"results":"23","hashOfConfig":"14"},{"size":848,"mtime":1614253840000,"results":"24","hashOfConfig":"14"},{"size":268,"mtime":1614253254000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1egaq8r",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/media/shoonlei/PD400/MERN-Testing/user-app/src/index.js",[],["52","53"],"/media/shoonlei/PD400/MERN-Testing/user-app/src/App.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/reportWebVitals.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/store/index.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/reducers/index.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/reducers/category.reducer.js",["54","55","56","57"],"import { categoryConstant } from '../actions/constants'\n\nconst initialSate = {\n    loading: false,\n    error: null,\n    categories: []\n}\n\n\nconst buildNewCategories = (parentId, categories, category) => {\n    let categoryArray = []\n    if(parentId == undefined){\n        return [\n            ...categories,\n            {\n                _id:category._id,\n                name:category.name,\n                slug:category.slug,\n                parentId:category.parentId,\n                children:[]\n            }\n        ]\n    }\n    for (let cat of categories) {\n        if (cat._id == parentId) {\n            categoryArray.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId,[...cat.children,{\n                    _id:category._id,\n                    name:category.name,\n                    slug:category.slug,\n                    parentId:category.parentId,\n                    children:category.children\n                }], category) : []\n            })\n        }else{\n            categoryArray.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId,cat.children, category) : []\n            })\n        }\n    }\n    return categoryArray;\n}\n\nexport default (state = initialSate, action) => {\n    switch (action.type) {\n        case (categoryConstant.GET_ALL_CATEGORY_SUCCESS):\n            state = {\n                ...state,\n                categories: action.payload.categories\n            }\n            break;\n        case (categoryConstant.ADD_NEW_CATEGORY_REQUEST):\n            state = {\n                ...state,\n                loading: true,\n            }\n            break;\n        case (categoryConstant.ADD_NEW_CATEGORY_SUCCESS):\n            // const updatedCategory=buildNewCategories(state.categories,action.payload.category)\n            // console.log(updatedCategory)\n            const category = action.payload.category\n            const updatedCategory = buildNewCategories(category.parentId, state.categories, category)\n            state = {\n                ...state,\n                categories: updatedCategory,\n                loading: false\n            }\n            break;\n        case (categoryConstant.ADD_NEW_CATEGORY_FAILURE):\n            state = {\n                ...initialSate,\n                loading: false\n            }\n            break;\n    }\n    return state\n}","/media/shoonlei/PD400/MERN-Testing/user-app/src/actions/constants.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/containers/HomePage.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/components/Header.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/components/MenuHeader.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/actions/category.actions.js",[],"/media/shoonlei/PD400/MERN-Testing/user-app/src/helpers/axios.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":12,"column":17,"nodeType":"64","messageId":"65","endLine":12,"endColumn":19},{"ruleId":"62","severity":1,"message":"63","line":25,"column":21,"nodeType":"64","messageId":"65","endLine":25,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":46,"column":1,"nodeType":"68","endLine":79,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":47,"column":5,"nodeType":"71","messageId":"72","endLine":77,"endColumn":6},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]